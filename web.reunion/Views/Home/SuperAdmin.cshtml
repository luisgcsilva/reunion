@using System.Security.Claims
@using web.reunion.Models
@model web.reunion.Models.AdminDashboardViewModel

@{
    ViewData["Title"] = "Painel de Administrador";

    var user = "";
    var local = "";
    var userRole = "";
    if (User.Identity!.IsAuthenticated)
    {
        user = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value;
        userRole = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
        local = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Locality)?.Value;
    }
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-2">
            <div class="card box-shadow mt-3">
                <div class="card-header">
                    <h3 class="card-title mb-3 text-center">Salas</h3>
                    <a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createSalaModal">
                        <i class="fa-solid fa-plus"></i>
                        Adicionar Sala
                    </a>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var sala in Model.Salas)
                        {
                            <a href="#" style="background-color: @sala.Cor; color: white" class="btn list-group-item list-group-item-primary edit-sala-button mb-3" data-id="@sala.SalaId" data-bs-toggle="modal" data-bs-target="#editSalaModal">
                                @if (sala.IsActive == false)
                                {
                                    <div class="row">
                                        <div class="col-md-10">
                                            <strong>Descrição:</strong> @sala.Descricao<br>
                                            <strong>Local:</strong> @sala.LocalId <br />
                                        </div>
                                        <div class="col-md-2 align-content-center">
                                            <i class="fa-regular fa-circle-xmark"></i>
                                        </div>
                                    </div>

                                }
                                else
                                {
                                    <strong>Descrição:</strong> @sala.Descricao <br>
                                    <strong>Local:</strong> @sala.LocalId <br />
                                }
                            </a>
                        }
                    </div>
                    <div>
                        <span><i class="fa-regular fa-circle-xmark"></i> - Sala Inativa</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card box-shadow mt-3">
                <div class="card-header">
                    <h3 class="card-title mb-3 text-center">Materiais</h3>
                    <a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createMaterialModal">
                        <i class="fa-solid fa-plus"></i>
                        Adicionar Material
                    </a>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var material in Model.Materiais)
                        {
                            <a data-id="@material.MaterialId" data-bs-toggle="modal" data-bs-target="#editMaterialModal" class="btn list-group-item list-group-item-primary edit-material-button mb-3">
                                <strong>Descrição:</strong> @material.Descricao
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card box-shadow mt-3">
                <div class="card-header">
                    <h3 class="card-title mb-3 text-center">Categorias</h3>
                    <a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createCategoriaModal">
                        <i class="fa-solid fa-plus"></i>
                        Adicionar Categoria
                    </a>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var categoria in Model.Categorias)
                        {
                            <a data-id="@categoria.CategoriaId" data-bs-toggle="modal" data-bs-target="#editCategoriaModal" class="btn list-group-item list-group-item-primary edit-categoria-button mb-3">
                                <strong>Categoria:</strong> @categoria.Descricao
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card box-shadow mt-3">
                <div class="card-header">
                    <h3 class="card-title mb-3 text-center">Locais</h3>
                    <a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createLocalModal">
                        <i class="fa-solid fa-plus"></i>
                        Adicionar Local
                    </a>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var lc in Model.Locais)
                        {
                            <a data-id="@lc.LocalId" data-bs-toggle="modal" data-bs-target="#editLocalModal" class="btn list-group-item list-group-item-primary edit-local-button mb-3">
                                <strong>Local:</strong> @lc.Descricao
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card box-shadow mt-3">
                <div class="card-header">
                    <h3 class="card-title mb-3 text-center">Grupos de Administrador</h3>
                    <a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createAdminGroupModal">
                        <i class="fa-solid fa-plus"></i>
                        Adicionar Grupo
                    </a>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach(var group in Model.AdminGroups)
                        {
                            <a data-id="@group.AdminGroupId" data-bs-toggle="modal" data-bs-target="#editAdminGroupModal" class="btn list-group-item list-group-item-primary edit-adminGroup-button mb-3">
                                <strong>Grupo:</strong> @group.Grupo
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card mt-4">
        <div class="card-header">
            <h2 class="card-title text-center">Marcações</h2>
            <div class="row d-flex justify-content-between align-items-center">
                <div class="d-flex justify-content-between align-items-center">
                    <a class="btn btn-success" id="createMarcacaoButton" data-bs-toggle="modal" data-bs-target="#createMarcacaoModal">
                        <i class="fa-regular fa-calendar-plus"></i>
                        Efetuar Marcação
                    </a>
                    <div class="d-flex">
                        <div>
                            <div class="mb-1">
                                <div class="input-group">
                                    <div class="col-md-5">
                                        <label class="input-group-text w-100" for="estadoFilter"><strong>Filtrar por Estado:</strong></label>
                                    </div>
                                    <select class="form-select" id="estadoFilter">
                                        <option value="">Todos</option>
                                        <!-- Add options for each Sala dynamically from your data -->
                                        @foreach (var estado in Enum.GetValues(typeof(Estado)).Cast<Estado>())
                                        {
                                            <option value="@estado">@estado</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="mb-1">
                                <div class="input-group">
                                    <div class="col-md-5">
                                        <label class="input-group-text w-100" for="localFilter"><strong>Filtrar por Local:</strong></label>
                                    </div>
                                    <select class="form-select" id="localFilter" asp-for="@local">
                                        <option value="">Todos</option>
                                        @foreach (var lc in Model.Locais)
                                        {
                                            <option value="@lc.LocalId">@lc.Descricao</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="mb-1">
                                <div class="input-group">
                                    <div class="col-md-5">
                                        <label class="input-group-text w-100" for="salaFilter"><strong>Filtrar por Sala:</strong></label>
                                    </div>
                                    <select class="form-select" id="salaFilter">
                                        <option value="">Todas</option>
                                        <!-- Add options for each Sala dynamically from your data -->
                                        @foreach (var sala in Model.Salas)
                                        {
                                            <option value="@sala.SalaId">@sala.Descricao + @sala.SalaId</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div id="calendar"></div>
        </div>
    </div>
    <div id="tooltip"></div>
</div>

<div id="loader">
    <div class="spinner-container">
        <div class="spinner">
        </div>
        <h5>Aguarde um pouco...</h5>
    </div>
</div>

<!-- Criar Marcação Modal-->
<div class="modal fade" id="createMarcacaoModal" tabindex="-1" aria-labelledby="createMarcacaoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createMarcacaoModalLabel">Marcar Sala</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _CreateMarcacaoForm -->
            </div>
        </div>
    </div>
</div>

<!-- Mostrar Detalhes da Marcação Modal -->
<div class="modal fade" id="detalhesMarcacaoModal" tabindex="-1" aria-labelledby="detalhesMarcacaoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detalhesMarcacaoModalLabel">Detalhes da Marcação</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _DetailsMarcacaoForm -->
            </div>
            <div class="modal-footer">
                <a href="#" type="button" class="btn btn-danger" id="fecharMarcacao" data-bs-dismiss="modal">
                    <i class="fa-solid fa-xmark"></i>
                    Fechar
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Editar Marcação Modal -->
<div class="modal fade" id="editModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Editar Marcação</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _EditMarcaçãoForm -->
                <div id="editFormContainer"></div>
            </div>
        </div>
    </div>
</div>

<!-- Motivo da Recuso Modal -->
<div class="modal fade" id="motivoModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="motivoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="motivoModalLabel">Deseja registar o motivo da Recusa?</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <textarea id="motivoInput" rows="4" type="text" class="form-control" placeholder="Motivo"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="confirmMotivo">
                    <i class="fa-regular fa-floppy-disk"></i>
                    Confirmar
                </button>
                <button type="button" class="btn btn-danger" id="confirmNotMotivo" data-bs-dismiss="modal">
                    <i class="fa-regular fa-rectangle-xmark"></i>
                    Não
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Criar Sala Modal -->
<div class="modal fade" id="createSalaModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="createSalaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createSalaModalLabel">Adicionar Nova Sala</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _CreateSalaForm -->
            </div>
        </div>
    </div>
</div>

<!-- Editar Sala Modal -->
<div class="modal fade" id="editSalaModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="editSalaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSalaModalLabel">Editar Detalhes de Sala</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _EditSalaForm -->
            </div>
        </div>
    </div>
</div>

<!-- Criar Material Modal -->
<div class="modal fade" id="createMaterialModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="createMaterialModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createMaterialModalLabel">Adicionar Material</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _CreateMaterialForm -->
            </div>
        </div>
    </div>
</div>

<!-- Editar Material Modal -->
<div class="modal fade" id="editMaterialModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="editMaterialModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editMaterialModalLabel">Editar Detalhes de Material</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _EditMaterialForm -->
            </div>
        </div>
    </div>
</div>

<!-- Criar Categoria Modal -->
<div class="modal fade" id="createCategoriaModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="createCategoriaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCategoriaModalLabel">Adicionar Categoria</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _CreateCategoriaForm -->
            </div>
        </div>
    </div>
</div>

<!-- Editar Categoria Modal -->
<div class="modal fade" id="editCategoriaModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="editCategoriaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoriaModalLabel">Editar Detalhes de Categoria</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _EditCategoriaForm -->
            </div>
        </div>
    </div>
</div>

<!-- Criar Local Modal -->
<div class="modal fade" id="createLocalModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="createLocalModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createLocalModalLabel">Adicionar Local</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _CreateLocalForm -->
            </div>
        </div>
    </div>
</div>

<!-- Editar Local Modal -->
<div class="modal fade" id="editLocalModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="editLocalModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLocalModalLabel">Editar Detalhes de Local</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _EditCategoriaForm -->
            </div>
        </div>
    </div>
</div>

<!-- Criar AminGroup Modal -->
<div class="modal fade" id="createAdminGroupModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="createAdminGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createAdminGroupModalLabel">Adicionar Grupo de Administrador</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _CreateAdminGroupForm -->
            </div>
        </div>
    </div>
</div>

<!-- Editar AdminGroup Modal -->
<div class="modal fade" id="editAdminGroupModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="editAdminGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAdminGroupModalLabel">Editar Detalhes de Grupo de Administrador</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preenche o modal dinamicante com o Formulário _EditAdminGroupForm -->
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var createMarcacaoModalEl = document.getElementById('createMarcacaoModal');
            var salaFilter = document.getElementById('salaFilter');
            var estadoFilter = document.getElementById('estadoFilter');
            var localFilter = document.getElementById('localFilter');
            var userLocal = '@local';

            // Initialize FullCalendar with the fetched events
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                slotMinTime: '07:00:00',
                slotMaxTime: '24:00:00',
                allDaySlot: false,
                nowIndicator: true,
                firstDay: 1,
                height: 'auto',
                timeZone: 'local',
                slotEventOverlap: false,
                locale: 'pt',
                navLinks: true,
                headerToolbar: {
                    start: 'timeGridDay,timeGridWeek,dayGridMonth,multiMonthSixMonth,multiMonthYear',
                    center: 'title',
                    end: 'today prev,next'
                },
                buttonText: {
                    today: 'Hoje',
                    timeGridDay: 'Diária',
                    timeGridWeek: 'Semanal',
                    dayGridMonth: 'Mensal',
                    multiMonthSixMonth: 'Semestral',
                    multiMonthYear: 'Anual'
                },
                views: {
                    multiMonthSixMonth: {
                        type: 'multiMonth',
                        duration: { months: 6 }
                    }
                },
                moreLinkText: function (num) {
                    return "+" + num + " marcações";
                },
                select: function (info) {
                    var start = info.start.toLocaleString().substring(12, 17);
                    var end = info.end.toLocaleString().substring(12, 17);
                    var day = info.start.toLocaleString().substring(0, 10);
                    var localId = localFilter.value;

                    $('#loader').show();

                    $.ajax({
                        url: '/Marcacoes/LoadCreateForm',
                        type: 'GET',
                        data: {
                            day: day,
                            start: start,
                            end: end,
                            localId: localId
                        },
                        success: function (data) {
                            $('#loader').hide();
                            $('#createMarcacaoModal .modal-body').html(data);
                            $('#createMarcacaoModal').modal('show');
                        },
                        error: function () {
                            $('#loader').hide();
                            alert('Houve um erro ao carregar os dados. Por favor tente novamente.');
                        }
                    });
                },
                selectAllow: function (selectInfo) {
                    var today = new Date();
                    return selectInfo.start >= today;
                },
                selectable: true,
                events: function (fetchInfo, successCallback, failureCallback) {
                    $.ajax({
                        url: '/Marcacoes/GetBookings',
                        type: 'GET',
                        data: {
                            salaId: salaFilter.value,
                            estado: estadoFilter.value,
                            local: localFilter.value
                        },
                        success: function (events) {
                            successCallback(events);
                        },
                        error: function () {
                            failureCallback();
                        }
                    });
                },
                eventContent: function (arg) {
                    let event = arg.event;
                    let category = event.extendedProps.categoria;
                    let sala = event.extendedProps.sala;
                    let estado = event.extendedProps.estado;
                    let color = event.extendedProps.color;
                    let local = event.extendedProps.local;
                    let duration = moment(arg.event.end).diff(moment(arg.event.start), 'minutes');

                    let eventContent = document.createElement('div');
                    eventContent.classList.add('fc-event-content');
                    eventContent.style.fontWeight = 'bold';
                    eventContent.style.marginLeft = '3px';
                    eventContent.style.maxWidth = '100%';
                    eventContent.style.maxHeight = '90%';
                    eventContent.style.display = 'flex';

                    let salaElement = document.createElement('span');
                    salaElement.classList.add('fc-event-sala');
                    salaElement.style.backgroundColor = color;
                    salaElement.style.fontWeight = 'bold';
                    salaElement.style.maxHeight = '90%';
                    salaElement.style.maxWidth = '100%';
                    salaElement.style.flex = '1';

                    if (estado == 'Pendente') {
                        salaElement.innerHTML = local;

                    } else {
                        salaElement.innerHTML = sala;
                    }

                    eventContent.appendChild(salaElement);

                    return { domNodes: [eventContent] };
                },
                eventDidMount: function (info) {
                    let estado = info.event.extendedProps.estado;
                    let backgroundColor;
                    let textColor;

                    switch (estado) {
                        case 'Aprovado':
                            backgroundColor = 'rgba(125, 218, 88, 0.70)';
                            textColor = 'black';
                            break;
                        case 'Pendente':
                            backgroundColor = 'rgba(255, 222, 89, 0.70)';
                            textColor = 'black';
                            break;
                        case 'Recusado':
                            backgroundColor = 'rgba(228, 8, 10, 0.70)';
                            textColor = 'black';
                            break;
                        default:
                            backgroundColor = 'grey';
                            textColor = 'black';
                    }

                    info.el.style.backgroundColor = backgroundColor;
                },
                eventClick: function (info) {
                    const event = info.event;
                    const marcacaoUser = event.title;
                    const currentUser = '@user';
                    const estado = event.extendedProps.estado;
                    const role = '@userRole';

                    $('#loader').show();

                    if (estado === "Aprovado") {
                        if (marcacaoUser === currentUser) {
                            $.ajax({
                                url: `/Marcacoes/${event.extendedProps.marcacaoId}/Edit`,
                                type: 'GET',
                                success: function (response) {
                                    $('#loader').hide();
                                    $('#editModal .modal-body').html(response);
                                    $('#editModal').modal('show');
                                },
                                error: function (error) {
                                    $('#loader').hide();
                                }
                            });
                        } else {
                            $.ajax({
                                url: `/Marcacoes/${event.extendedProps.marcacaoId}/Details`,
                                type: 'GET',
                                success: function (response) {
                                    $('#loader').hide();
                                    $('#detalhesMarcacaoModal .modal-body').html(response);

                                    $('#detalhesMarcacaoModal').modal('show');
                                },
                                error: function (error) {
                                    $('#loader').hide();
                                }
                            });
                        }
                    }
                    else {
                        if (marcacaoUser === currentUser) {
                            $.ajax({
                                url: `/Marcacoes/${event.extendedProps.marcacaoId}/Edit`,
                                type: 'GET',
                                success: function (response) {
                                    $('#loader').hide();
                                    $('#editModal .modal-body').html(response);
                                    $('#editModal').modal('show');
                                },
                                error: function (error) {
                                    $('#loader').hide();
                                }
                            });
                        } else {
                            $.ajax({
                                url: `/Marcacoes/${event.extendedProps.marcacaoId}/Details`,
                                type: 'GET',
                                success: function (response) {
                                    $('#loader').hide();
                                    $('#detalhesMarcacaoModal .modal-body').html(response);

                                    $('#detalhesMarcacaoModal').modal('show');
                                },
                                error: function (error) {
                                    $('#loader').hide();
                                }
                            });
                        }
                    }
                },
                eventMouseEnter: function (info) {
                    let tooltip = document.getElementById('tooltip');
                    let categoria = info.event.extendedProps.categoria;
                    let sala = info.event.extendedProps.sala;
                    let local = info.event.extendedProps.local;
                    let estado = info.event.extendedProps.estado;

                    tooltip.innerHTML = `<strong>Utilizador:</strong> ${info.event.title}<br>
                                                                                     <strong>Categoria:</strong> ${categoria}<br>
                                                                                     <strong>Sala:</strong> ${sala}<br>
                                                                                     <strong>Estado:</strong> ${estado}`;

                    tooltip.style.display = 'block';
                    tooltip.style.left = (info.jsEvent.pageX + 10) + 'px';
                    tooltip.style.top = (info.jsEvent.pageY + 10) + 'px';
                },
                eventMouseLeave: function (info) {
                    let tooltip = document.getElementById('tooltip');
                    tooltip.style.display = 'none';
                }
            });

            calendar.render();

            var label = document.createElement('div');
            label.innerHTML = 'Vista do Calendário';
            label.style.textAlign = 'center';
            label.style.fontWeight = 'bold';

            var toolbar = document.querySelector('.fc-toolbar-chunk:first-child');
            toolbar.insertBefore(label, toolbar.firstChild);

            document.getElementById('salaFilter').addEventListener('change', function () {
                calendar.refetchEvents();
            });

            document.getElementById('estadoFilter').addEventListener('change', function () {
                calendar.refetchEvents();
            });

            document.getElementById('localFilter').addEventListener('change', function () {
                updateSalasDropdown();
                calendar.refetchEvents();
            });

            function updateSalasDropdown() {
                var localId = document.getElementById('localFilter');
                var salaId = document.getElementById('salaFilter');

                $.ajax({
                    url: '/Salas/GetSalasByLocal',
                    type: 'GET',
                    data: {
                        localId: localId.value
                    },
                    success: function (data) {
                        var salaSelect = $('#salaFilter');
                        salaSelect.empty();
                        salaSelect.append('<option value="">Todas</option>');

                        $.each(data, function (index, item) {
                            salaSelect.append('<option value="' + item.salaId + '">' + item.descricao + '</option>');
                        });
                    }
                });

                if (localId.value == "") {
                    salaFilter.value = "";
                }
            }

            updateSalasDropdown();

            document.getElementById('createMarcacaoButton').addEventListener('click', function () {
                var now = new Date();
                var options = { timeZone: 'Europe/Lisbon', hour12: false };

                var currentTimeInLisbon = now.toLocaleTimeString('pt', options);

                var day = now.toLocaleString().substring(0, 10);
                var start = currentTimeInLisbon.substring(0, 5);
                var end = new Date(now.getTime() + 60 * 60 * 1000).toLocaleTimeString('pt', options).substring(0, 5);

                loadCreateForm(day, start, end);
            });

            function loadCreateForm(day, start, end) {
                $('#loader').show();
                $.ajax({
                    url: '/Marcacoes/LoadCreateForm',
                    type: 'GET',
                    data: {
                        day: day,
                        start: start,
                        end: end,
                        localId: localFilter.value
                    },
                    success: function (data) {
                        $('#loader').hide();
                        $('#createMarcacaoModal .modal-body').html(data);
                    },
                    error: function () {
                        $('#loader').hide();
                        alert('Failed to load the form. Please try again.');
                    }
                });
            }

            $(document).ready(function () {
                $('#createMaterialModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);
                    var modal = $(this);

                    $.ajax({
                        url: '/Materiais/Create',
                        type: 'GET',
                        success: function (data) {
                            modal.find('.modal-body').html(data);
                        }
                    });
                });
            });

            $(document).ready(function () {
                $('#createSalaModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);
                    var modal = $(this);

                    $.ajax({
                        url: '/Salas/Create',
                        type: 'GET',
                        success: function (data) {
                            modal.find('.modal-body').html(data);
                        }
                    });
                });
            });

            $(document).ready(function () {
                $('#createCategoriaModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);
                    var modal = $(this);

                    $.ajax({
                        url: '/Categorias/Create',
                        type: 'GET',
                        success: function (data) {
                            modal.find('.modal-body').html(data);
                        }
                    });
                });
            });

            $(document).ready(function () {
                $('#createLocalModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);
                    var modal = $(this);

                    $.ajax({
                        url: '/Locais/Create',
                        type: 'GET',
                        success: function (data) {
                            modal.find('.modal-body').html(data);
                        }
                    });
                });
            });

            $(document).ready(function () {
                $('#createAdminGroupModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);
                    var modal = $(this);

                    $.ajax({
                        url: '/AdminGroups/Create',
                        type: 'GET',
                        success: function (data) {
                            modal.find('.modal-body').html(data);
                        }
                    });
                });
            });

            function openEditSalaModal(salaId) {
                $.ajax({
                    url: `/Salas/${salaId}/Edit`,
                    type: 'GET',
                    success: function (response) {
                        $('#editSalaModal .modal-body').html(response);
                        $('#editSalaModal').modal('show');
                    },
                    error: function (error) {
                        console.error('Erro fetching sala info:', error);
                    }
                });
            }

            $('.edit-sala-button').click(function () {
                var salaId = $(this).data('id');
                openEditSalaModal(salaId);
            });

            function openEditMaterialModal(materialId) {
                $.ajax({
                    url: `/Materiais/${materialId}/Edit`,
                    type: 'GET',
                    success: function (response) {
                        $('#editMaterialModal .modal-body').html(response);
                        $('#editMaterialModal').modal('show');
                    },
                    error: function (error) {
                        console.error('Error fetching material info:', error);
                    }
                });
            }

            $('.edit-material-button').click(function () {
                var materialId = $(this).data('id');
                openEditMaterialModal(materialId);
            });

            function openEditCategoriaModal(categoriaId) {
                $.ajax({
                    url: `/Categorias/${categoriaId}/Edit`,
                    type: 'GET',
                    success: function (response) {
                        $('#editCategoriaModal .modal-body').html(response);
                        $('#editCategoriaModal').modal('show');
                    },
                    error: function (error) {
                        console.error('Error fetching categoria info:', error);
                    }
                });
            }

            $('.edit-categoria-button').click(function () {
                var categoriaId = $(this).data('id');
                openEditCategoriaModal(categoriaId);
            });

            function openEditLocalModal(localId) {
                $.ajax({
                    url: `/Locais/${localId}/Edit`,
                    type: 'GET',
                    success: function (response) {
                        $('#editLocalModal .modal-body').html(response);
                        $('#editLocalModal').modal('show');
                    },
                    error: function (error) {
                        console.error('Error fetching local info:', error);
                    }
                });
            }

            $('.edit-local-button').click(function () {
                var localId = $(this).data('id');
                openEditLocalModal(localId);
            });

            function openEditAdminGroupModal(adminGroupId) {
                console.log(adminGroupId);
                $.ajax({
                    url: `/AdminGroups/${adminGroupId}/Edit`,
                    type: 'GET',
                    success: function (response) {
                        $('#editAdminGroupModal .modal-body').html(response);
                        $('#editAdminGroupModal').modal('show');
                    },
                    error: function (error) {
                        console.error('Error fetching adminGroup info:', error);
                    }
                });
            }

            $('.edit-adminGroup-button').click(function () {
                var adminGroupId = $(this).data('id');
                openEditAdminGroupModal(adminGroupId);
            });

        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
